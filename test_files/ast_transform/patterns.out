[{attribute,{loc,[],0,0},module,patterns},
 {function,{loc,[],0,0},
           foo,1,
           [{fun_clause,{loc,[],0,0},
                        [{var,{loc,[],0,0},{local_bind,{'X',0}}}],
                        [],
                        [{'case',{loc,[],0,0},
                                 {var,{loc,[],0,0},{local_ref,{'X',0}}},
                                 [{case_clause,{loc,[],0,0},
                                               {tuple,{loc,[],0,0},[{var,{loc,[],0,0},{local_bind,{'Y',0}}},{var,{loc,[],0,0},{local_ref,{'Y',0}}}]},
                                               [],
                                               [{var,{loc,[],0,0},{local_ref,{'Y',0}}}]},
                                  {case_clause,{loc,[],0,0},
                                               {tuple,{loc,[],0,0},[{var,{loc,[],0,0},{local_bind,{'Y',0}}},{var,{loc,[],0,0},{local_bind,{'Z',0}}}]},
                                               [],
                                               [{op,{loc,[],0,0},
                                                    '+',
                                                    {var,{loc,[],0,0},{local_ref,{'Y',0}}},
                                                    {call,{loc,[],0,0},
                                                          {var,{loc,[],0,0},{qref,lists,map,2}},
                                                          [{'fun',{loc,[],0,0},
                                                                  no_name,
                                                                  [{fun_clause,{loc,[],0,0},
                                                                               [{var,{loc,[],0,0},{local_bind,{'Z',1}}}],
                                                                               [],
                                                                               [{op,{loc,[],0,0},'+',{var,{loc,[],0,0},{local_ref,{'Z',1}}},{integer,{loc,[],0,0},1}}]}]},
                                                           {var,{loc,[],0,0},{local_ref,{'Z',0}}}]}}]},
                                  {case_clause,{loc,[],0,0},
                                               {map,{loc,[],0,0},
                                                    [{map_field_req,{loc,[],0,0},{var,{loc,[],0,0},{local_ref,{'X',0}}},{var,{loc,[],0,0},{local_bind,{'V',0}}}},
                                                     {map_field_req,{loc,[],0,0},
                                                                      {atom,{loc,[],0,0},blub},
                                                                      {tuple,{loc,[],0,0},[{var,{loc,[],0,0},{local_bind,{'K',0}}},{var,{loc,[],0,0},{local_ref,{'V',0}}}]}}]},
                                               [],
                                               [{var,{loc,[],0,0},{local_ref,{'K',0}}}]}]}]}]},
 {function,{loc,[],0,0},
           bar,1,
           [{fun_clause,{loc,[],0,0},
                        [{var,{loc,[],0,0},{local_bind,{'X',0}}}],
                        [],
                        [{'case',{loc,[],0,0},
                                 {var,{loc,[],0,0},{local_ref,{'X',0}}},
                                 [{case_clause,{loc,[],0,0},
                                               {var,{loc,[],0,0},{local_bind,{'Y',0}}},
                                               [],
                                               [{'case',{loc,[],0,0},
                                                        {integer,{loc,[],0,0},3},
                                                        [{case_clause,{loc,[],0,0},
                                                                      {match,{loc,[],0,0},{var,{loc,[],0,0},{local_bind,{'$X_0',0}}},{var,{loc,[],0,0},{local_ref,{'Y',0}}}},
                                                                      [],
                                                                      [{var,{loc,[],0,0},{local_ref,{'$X_0',0}}}]}]}]}]}]}]},
 {function,{loc,[],0,0},
           spam,0,
           [{fun_clause,{loc,[],0,0},
                        [],[],
                        [{lc,{loc,[],0,0},
                             {var,{loc,[],0,0},{local_ref,{'X',1}}},
                             [{generate,{loc,[],0,0},
                                        {var,{loc,[],0,0},{local_bind,{'X',0}}},
                                        {cons,{loc,[],0,0},{integer,{loc,[],0,0},1},{cons,{loc,[],0,0},{integer,{loc,[],0,0},2},{cons,{loc,[],0,0},{integer,{loc,[],0,0},3},{nil,{loc,[],0,0}}}}}},
                              {generate,{loc,[],0,0},
                                        {var,{loc,[],0,0},{local_bind,{'X',1}}},
                                        {cons,{loc,[],0,0},
                                              {integer,{loc,[],0,0},4},
                                              {cons,{loc,[],0,0},{integer,{loc,[],0,0},5},{cons,{loc,[],0,0},{var,{loc,[],0,0},{local_ref,{'X',0}}},{nil,{loc,[],0,0}}}}}}]}]}]},
 {function,{loc,[],0,0},
           catch_test,0,
           [{fun_clause,{loc,[],0,0},
                        [],[],
                        [{'try',{loc,[],0,0},
                                [{call,{loc,[],0,0},{var,{loc,[],0,0},{qref,erlang,throw,1}},[{atom,{loc,[],0,0},throw}]}],
                                [],
                                [{catch_clause,{loc,[],0,0},
                                               {var,{loc,[],0,0},{local_bind,{'X',0}}},
                                               {var,{loc,[],0,0},{local_ref,{'X',0}}},
                                               {var,{loc,[],0,0},{local_bind,{'_S',0}}},
                                               [],
                                               [{atom,{loc,[],0,0},ok}]}],
                                []}]}]}].
